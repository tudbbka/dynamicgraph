                                              GRAPH GENERATION AND VISUALISATION v1.0 April 2014
-----------------------------------------------------------------------------------------------------------------------------------------------
This package provides programs to generate a dynamic graph from a seed (initial) graph and to visualise the evolution of the graph as a movie. The program for generating the graph has been implemented in Python v3. It is an attempt to implement the algorithm from the research paper "Microscopic evolution of social networks" by Leskovec et al, 2008. The graph at each time step is saved in JSON format. Two forms of visualisation of the graph evolution are provided, namely using D3JS and as a movie created using GraphStream.

Copyright (C) 2014  Anuja Meetoo Appavoo & Paramasiven Appavoo @ NUS 
   
This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.    
-----------------------------------------------------------------------------------------------------------------------------------------------

DESCRIPTION OF FOLDERS AND FILES
   + GraphGeneration
      * MiscroscopicEvolutionOfSocialNetworks.py
	 - This Python program is an attempt to implement the algorithm from the research paper "Microscopic evolution of social networks" by 		 Leskovec et al, 2008. It generates a dynamic graph from a given seed graph.

      * networkEvolution
	 - This folder contains json files generated by the Python program MiscroscopicEvolutionOfSocialNetworks.py. The json files stores the 		 graph at each time steps, e.g. network0.json stores the seed graph, network1.json stores the graph at time step 1, and so on. It 		 also contains HTML files generated to view the graph evolution using D3JS, e.g. network0.json.html refers to the HTML file to 		 visualise the seed graph, network1.json.html is the HTML file to visualise the graph at time step 1, and so on. The d3js folder 	  stores the D3JS JavaScript file used to create the graph visualisation.

      * SeedGraph 
	 - This folder stores the seed graph in the file network.dat. This file contains the list of edges (source-target), one per line, 		 where nodes are labeled from 1 to the number of nodes. It can be generated using a Benchmark tool.
      
      * visualizeHTML
	 - This folders stores text files that are used to generate HTML files to visualise the graph evolution using D3JS.

   + GraphVisualisation
      * src folder stores the following Java files to create the graph visualisation:
	 - GraphData is used to represent graphs given in JSON files. It is used by the DynamicGraphVisualisation.java program for easy 	 manipulation of the set of nodes and edges.
	 - DynamicGraphVisualisation.java program reads data from a set of JSON files representing the graph evolution, one at a time, and 		 stores them as GraphData objects. It then uses the graph representation in GraphStream to add the each node, one at a time, together 		 with edges to nodes already added to the graph. A series of images are created representing the graph evolution at different 		 points in time, that can be used to create a movie. The code for generating images was mostly taken from GraphStream examples
	 - FromJSONtoDGS.java coverts JSON files to DGS format, a textual file that is human-readable and can be compressed.
	 - FromDGStoMovie.java converts a graph stored in the DGS file format to a series of images that represent the graph evolution at 		 different points in time. The code was mostly taken from GraphStream examples.

      * css stores the CSS file graphStyle.css applied to the graph.

      * GraphSteam stores GraphStream libraries used by the Java program to generate the images.

      * logo stores the logo used in the movie.

      * DGS stores the dgs file generated by FromJSONtoDGS.java.

   + movie
      * image stores the images generated by the DynamicGraphVisualisation.java program.

      * imagesFromDGS stores the images generated by the FromDGStoMovie.java program.

      * mencoder.sh contains the script, provided by GraphStream, to generate a movie from the series of images stored in the folder images.

      * mencoderDGS.sh contains the script, provided by GraphStream, to generate a movie from the series of images stored in the folder 	imagesFromDGS.

      * dynamicGraph.avi is the movie generated using mencoder.sh.

      * dynamicGraphFromDGS.avi is the movie generated using mencoderDGS.sh.
-----------------------------------------------------------------------------------------------------------------------------------------------

PRE-REQUIREMENTS
The following programs / tools are required:
 - Eclipse
 - Java 
 - Python v3
 - networkx1.8.1
 - json-simple1.1.1
 - GraphStream libraries
 - Benchmark tool to generate the seed graph

-----------------------------------------------------------------------------------------------------------------------------------------------HOW TO RUN
Follow the following steps to generate the dynamic graph and its visualisation:
 1. Generate the seed graph and store it in the folder SeedGraph.
 2. The folder DynamicGraph is an Eclipse workspace. Open it in Eclipse.
 3. Execute the Python program MiscroscopicEvolutionOfSocialNetworks.py to generate the dynamic graph from the seed graph.
 4. The evolution can be viewed from the HTML files generated in the folder networkEvolution.
 5. Run the program DynamicGraphVisualisation.java or (FromJSONtoDGS.java followed by FromDGStoMovie.java). 
 6. Execute the mencoder.sh (or mencoderDGS.sh) script from command line. This will generate the movie.

----------------------------------------------------------------------------------------------------------------------------------------------
Your comments and feedbacks are most welcome. If you have any issue with the programs, have any comment or feedback, or have found a bug, you may contact us at the following email addresses:
	anuja@comp.nus.edu.sg
	pappavoo@comp.nus.edu.sg
----------------------------------------------------------------------------------------------------------------------------------------------
